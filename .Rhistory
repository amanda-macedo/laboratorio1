base1 <- base[, !colnames(base) %in% c("idade_filhos", "cargo_nivel1", "cargo_nivel2",
"se_nao_como_consegue_obter","curso_formacao","cargo",
"unidade_lotacao","mora_com","outro_mora_com","gênero_outro")]
# Tratamento carga horaria semanal
base1 <- mutate(base1, carga_horaria_semanal = ifelse(carga_horaria_semanal == 'Outra', outro_carga_horaria_semanal, carga_horaria_semanal))
base1$carga_horaria_semanal <- gsub("\\D", "", base1$carga_horaria_semanal)
base1 <- base1[, !colnames(base1) %in% c("outro_carga_horaria_semanal")]
# Tratamento estado civil
base1 <- mutate(base1, estado_civil = ifelse(estado_civil == 'Outro', 'Divorciado(a)', estado_civil))
base1 <- base1[, !colnames(base1) %in% c("outro_estado_civil")]
# Tratamento qtd filhos
base1 <- mutate(base1, qtd_filhos = ifelse(is.na(qtd_filhos), "0", qtd_filhos))
# tratamento tipo das variaveis
base1$genero <- as.factor(base1$genero)
# Para os graficos ficarem nesta ordem
ordem <- c("Ótimo", "Bom", "Regular", "Ruim", "Péssimo")
satisfacao <- c("Bom", "Regular", "Péssimo", "Ruim", "Ótimo")
base1$arquitetonica_num <- factor(base1$como_considera_acessibilidade_arquitetonica_ufsm, levels = c("Péssimo", "Ruim", "Regular", "Bom", "Ótimo"))
base1$arquitetonica_num <- as.numeric(base1$arquitetonica_num)
# knitr::kable(acessibilidade_geral_masc)
# knitr::kable(acessibilidade_geral_fem)
View(base1)
View(base1)
pacman::p_load(gridExtra,readxl,dplyr,knitr,rmarkdown,ggplot2, kableExtra)
base <- read_excel('C:/Users/amand/OneDrive/Documentos/GitHub/laboratorio1/Respostas.xlsx')
base <- base[, -ncol(base)]
name_columns <- c(
"genero",
"genero_outro",
"idade",
"estado_civil",
"outro_estado_civil",
"filhos",
"qtd_filhos",
"idade_filhos",
"mora_com",
"outro_mora_com",
"escolaridade",
"curso_formacao",
"categoria",
"cargo",
"cargo_nivel1",
"cargo_nivel2",
"carga_horaria_semanal",
"outro_carga_horaria_semanal",
"unidade_lotacao",
"cd_ou_fg",
"campus",
"ano_ingresso",
"ingresso_cotas_pcd",
"sentimento_local_trabalho",
"deficiencia",
"deficiencia_outro",
"periodo_diagnostico",
"causa_deficiencia",
"uso_tecnologia_assistiva_recurso",
"qual_tecnologia",
"tecnologia_disponibilizada_ufsm",
"como_consegue_obter_tecnologia",
"necessita_acompanhamento/apoio_atividades_cotidianas_notrabalho",
"se_sim_quais_atividades?",
"acompanhamento/apoio_disponibilizado_ufsm",
"se_nao_como_consegue_obter",
"como_considera_acessibilidade_arquitetonica_ufsm",
"como_considera_acessibilidade_atitudinal_ufsm",
"como_considera_acessibilidade_instrumental_digital_ufsm",
"como_considera_acessibilidade_comunicacional_ufsm",
"conhece_legislacao_br_sobre_acessibilidade",
"objetivo_quando_fez_concurso_ufsm",
"outro_objetivo_quando_fez_concurso_ufsm",
"dificuldade_adaptacao_durante_ingresso_atividades_laborais_ufsm",
"dificuldade_adaptacao_se_sim_como_foi_resolvido",
"enfrentou_problema_relacionamento_chefia_eou_colegas",
"problema_relacionamento_se_sim_como_foi_resolvido",
"ja_foi_parte_reclamante_processo_administrativo_disciplinar_sindicancia_eou_reclamatoria_trabalhista_naufsm",
"considera_ufsm_dispoe_recursos_humanos_materiais_suficientes_atender_necessidades_que_eventualmente_surjam_em_relacao_acessibilidade",
"se_nao_relate_oq_considera_insuficiente",
"voce_participa_associacao/sindicato/outros_grupos_luta_direitos_trabalhistas",
"se_sim_qual_associacao/sindicato",
"se_participa_sente_pautas_pcd_consideradas_em_acoes_da_associacao/sindicato",
"espaco_comentarios")
# curso formacao tirei pq há 62 categorias distintas
# cargo tirei pq não tem padrão na escrita (42 categorias distintas)
# unidade_lotacao variável inútil para gente e 56 categorias distintas
# ia tratar a variável mora_com e outro_mora_com mas são categorias demais e estão confusas
# gênero_outro só tem nulo
# Remoção colunas
colnames(base) <- name_columns
base1 <- base[, !colnames(base) %in% c("idade_filhos", "cargo_nivel1", "cargo_nivel2",
"se_nao_como_consegue_obter","curso_formacao","cargo",
"unidade_lotacao","mora_com","outro_mora_com","genero_outro")]
View(base1)
# Tratamento carga horaria semanal
base1 <- mutate(base1, carga_horaria_semanal = ifelse(carga_horaria_semanal == 'Outra', outro_carga_horaria_semanal, carga_horaria_semanal))
base1$carga_horaria_semanal <- gsub("\\D", "", base1$carga_horaria_semanal)
base1 <- base1[, !colnames(base1) %in% c("outro_carga_horaria_semanal")]
# Tratamento estado civil
base1 <- mutate(base1, estado_civil = ifelse(estado_civil == 'Outro', 'Divorciado(a)', estado_civil))
base1 <- base1[, !colnames(base1) %in% c("outro_estado_civil")]
# Tratamento qtd filhos
base1 <- mutate(base1, qtd_filhos = ifelse(is.na(qtd_filhos), "0", qtd_filhos))
# tratamento tipo das variaveis
base1$genero <- as.factor(base1$genero)
# Para os graficos ficarem nesta ordem
ordem <- c("Ótimo", "Bom", "Regular", "Ruim", "Péssimo")
satisfacao <- c("Bom", "Regular", "Péssimo", "Ruim", "Ótimo")
base1$arquitetonica_num <- factor(base1$como_considera_acessibilidade_arquitetonica_ufsm, levels = c("Péssimo", "Ruim", "Regular", "Bom", "Ótimo"))
base1$arquitetonica_num <- as.numeric(base1$arquitetonica_num)
# knitr::kable(acessibilidade_geral_masc)
# knitr::kable(acessibilidade_geral_fem)
View(base1)
base1 <- base1 %>%
mutate(arquitetonica_num = case_when(
como_considera_acessibilidade_arquitetonica_ufsm == "Bom" ~ 4,
como_considera_acessibilidade_arquitetonica_ufsm == "Regular" ~ 3,
como_considera_acessibilidade_arquitetonica_ufsm == "Péssimo" ~ 1,
como_considera_acessibilidade_arquitetonica_ufsm == "Ruim" ~ 2,
como_considera_acessibilidade_arquitetonica_ufsm == "Ótimo" ~ 5,
TRUE ~ NA_integer_
))
remove_acentos <- function(texto) {
texto <- gsub("[áâãà]", "a", texto)
remove_acentos <- function(texto) {
return(stri_trans_general(texto, "Latin-ASCII"))
}
# Aplicar a função de remoção de acentos e mapear os valores
base1 <- base1 %>%
mutate(arquitetonica_num = case_when(
como_considera_acessibilidade_arquitetonica_ufsm %in% valores ~ numeros[match(
remove_acentos(como_considera_acessibilidade_arquitetonica_ufsm),
remove_acentos(valores)
)]
))
valores <- c("Bom", "Regular", "Péssimo", "Ruim", "Ótimo")
remove_acentos <- function(texto) {
return(stri_trans_general(texto, "Latin-ASCII"))
}
# Aplicar a função de remoção de acentos e mapear os valores
base1 <- base1 %>%
mutate(arquitetonica_num = case_when(
como_considera_acessibilidade_arquitetonica_ufsm %in% valores ~ numeros[match(
remove_acentos(como_considera_acessibilidade_arquitetonica_ufsm),
remove_acentos(valores)
)]
))
numeros <- c(4, 3, 1, 2, 5)
remove_acentos <- function(texto) {
return(stri_trans_general(texto, "Latin-ASCII"))
}
# Aplicar a função de remoção de acentos e mapear os valores
base1 <- base1 %>%
mutate(arquitetonica_num = case_when(
como_considera_acessibilidade_arquitetonica_ufsm %in% valores ~ numeros[match(
remove_acentos(como_considera_acessibilidade_arquitetonica_ufsm),
remove_acentos(valores)
)]
))
pacman::p_load(gridExtra,readxl,dplyr,knitr,rmarkdown,ggplot2, kableExtra, stringi)
base <- read_excel('C:/Users/amand/OneDrive/Documentos/GitHub/laboratorio1/Respostas.xlsx')
base <- base[, -ncol(base)]
name_columns <- c(
"genero",
"genero_outro",
"idade",
"estado_civil",
"outro_estado_civil",
"filhos",
"qtd_filhos",
"idade_filhos",
"mora_com",
"outro_mora_com",
"escolaridade",
"curso_formacao",
"categoria",
"cargo",
"cargo_nivel1",
"cargo_nivel2",
"carga_horaria_semanal",
"outro_carga_horaria_semanal",
"unidade_lotacao",
"cd_ou_fg",
"campus",
"ano_ingresso",
"ingresso_cotas_pcd",
"sentimento_local_trabalho",
"deficiencia",
"deficiencia_outro",
"periodo_diagnostico",
"causa_deficiencia",
"uso_tecnologia_assistiva_recurso",
"qual_tecnologia",
"tecnologia_disponibilizada_ufsm",
"como_consegue_obter_tecnologia",
"necessita_acompanhamento/apoio_atividades_cotidianas_notrabalho",
"se_sim_quais_atividades?",
"acompanhamento/apoio_disponibilizado_ufsm",
"se_nao_como_consegue_obter",
"como_considera_acessibilidade_arquitetonica_ufsm",
"como_considera_acessibilidade_atitudinal_ufsm",
"como_considera_acessibilidade_instrumental_digital_ufsm",
"como_considera_acessibilidade_comunicacional_ufsm",
"conhece_legislacao_br_sobre_acessibilidade",
"objetivo_quando_fez_concurso_ufsm",
"outro_objetivo_quando_fez_concurso_ufsm",
"dificuldade_adaptacao_durante_ingresso_atividades_laborais_ufsm",
"dificuldade_adaptacao_se_sim_como_foi_resolvido",
"enfrentou_problema_relacionamento_chefia_eou_colegas",
"problema_relacionamento_se_sim_como_foi_resolvido",
"ja_foi_parte_reclamante_processo_administrativo_disciplinar_sindicancia_eou_reclamatoria_trabalhista_naufsm",
"considera_ufsm_dispoe_recursos_humanos_materiais_suficientes_atender_necessidades_que_eventualmente_surjam_em_relacao_acessibilidade",
"se_nao_relate_oq_considera_insuficiente",
"voce_participa_associacao/sindicato/outros_grupos_luta_direitos_trabalhistas",
"se_sim_qual_associacao/sindicato",
"se_participa_sente_pautas_pcd_consideradas_em_acoes_da_associacao/sindicato",
"espaco_comentarios")
# curso formacao tirei pq há 62 categorias distintas
# cargo tirei pq não tem padrão na escrita (42 categorias distintas)
# unidade_lotacao variável inútil para gente e 56 categorias distintas
# ia tratar a variável mora_com e outro_mora_com mas são categorias demais e estão confusas
# gênero_outro só tem nulo
# Remoção colunas
colnames(base) <- name_columns
base1 <- base[, !colnames(base) %in% c("idade_filhos", "cargo_nivel1", "cargo_nivel2",
"se_nao_como_consegue_obter","curso_formacao","cargo",
"unidade_lotacao","mora_com","outro_mora_com","genero_outro")]
# Tratamento carga horaria semanal
base1 <- mutate(base1, carga_horaria_semanal = ifelse(carga_horaria_semanal == 'Outra', outro_carga_horaria_semanal, carga_horaria_semanal))
base1$carga_horaria_semanal <- gsub("\\D", "", base1$carga_horaria_semanal)
base1 <- base1[, !colnames(base1) %in% c("outro_carga_horaria_semanal")]
# Tratamento estado civil
base1 <- mutate(base1, estado_civil = ifelse(estado_civil == 'Outro', 'Divorciado(a)', estado_civil))
base1 <- base1[, !colnames(base1) %in% c("outro_estado_civil")]
# Tratamento qtd filhos
base1 <- mutate(base1, qtd_filhos = ifelse(is.na(qtd_filhos), "0", qtd_filhos))
# tratamento tipo das variaveis
base1$genero <- as.factor(base1$genero)
# Para os graficos ficarem nesta ordem
ordem <- c("Ótimo", "Bom", "Regular", "Ruim", "Péssimo")
# Genero x grau de satisfacao
# acessibilidade arquitetonica
table(base1$genero)
table(base1$genero,base1$como_considera_acessibilidade_arquitetonica_ufsm)
base_feminino <- base1[base1$genero == "Feminino", ]
base_masculino <- base1[base1$genero == "Masculino", ]
print(sprintf('Percentual de respostas bom ou regular para os homens é de %.1f %% e para mulheres é de %.1f %%',
sum(base_masculino$como_considera_acessibilidade_arquitetonica_ufsm %in% c("Bom", "Ótimo")) / nrow(base_masculino) * 100,
sum(base_feminino$como_considera_acessibilidade_arquitetonica_ufsm %in% c("Bom", "Ótimo")) / nrow(base_feminino) * 100))
valores <- c("Bom", "Regular", "Péssimo", "Ruim", "Ótimo")
numeros <- c(4, 3, 1, 2, 5)
# remove_acentos <- function(texto) {
#   texto <- gsub("[áâãà]", "a", texto)
#   texto <- gsub("[éê]", "e", texto)
#   texto <- gsub("[í]", "i", texto)
#   texto <- gsub("[óôõ]", "o", texto)
#   texto <- gsub("[ú]", "u", texto)
#   texto <- gsub("[ç]", "c", texto)
#   return(texto)
# }
remove_acentos <- function(texto) {
return(stri_trans_general(texto, "Latin-ASCII"))
}
# Aplicar a função de remoção de acentos e mapear os valores
base1 <- base1 %>%
mutate(arquitetonica_num = case_when(
como_considera_acessibilidade_arquitetonica_ufsm %in% valores ~ numeros[match(
remove_acentos(como_considera_acessibilidade_arquitetonica_ufsm),
remove_acentos(valores)
)]
))
# knitr::kable(acessibilidade_geral_masc)
# knitr::kable(acessibilidade_geral_fem)
View(base1)
remove_acentos <- function(texto) {
return(iconv(texto, "latin1", "ASCII", sub=""))
}
# Aplicar a função de remoção de acentos e mapear os valores
base1 <- base1 %>%
mutate(arquitetonica_num = case_when(
remove_acentos(como_considera_acessibilidade_arquitetonica_ufsm) %in% valores ~ numeros[match(
remove_acentos(como_considera_acessibilidade_arquitetonica_ufsm),
remove_acentos(valores)
)]
))
df$como_considera_acessibilidade_arquitetonica_ufsm <- remove_acentos(base1$como_considera_acessibilidade_arquitetonica_ufsm)
como_considera_acessibilidade_arquitetonica_ufsm <- remove_acentos(base1$como_considera_acessibilidade_arquitetonica_ufsm)
base1$arquitetonica_num <- factor(base1$como_considera_acessibilidade_arquitetonica_ufsm, levels = c("Péssimo", "Ruim", "Regular", "Bom", "Ótimo"))
base1$arquitetonica_num <- as.numeric(base1$arquitetonica_num)
View(base1)
unique(base1$como_considera_acessibilidade_arquitetonica_ufsm)
pacman::p_load(gridExtra,readxl,dplyr,knitr,rmarkdown,ggplot2, kableExtra, stringi)
base <- read_excel('C:/Users/amand/OneDrive/Documentos/GitHub/laboratorio1/Respostas.xlsx',Encoding="UTF-8")
base <- read_excel('C:/Users/amand/OneDrive/Documentos/GitHub/laboratorio1/Respostas.xlsx',encoding="UTF-8")
base <- read_xlsx('C:/Users/amand/OneDrive/Documentos/GitHub/laboratorio1/Respostas.xlsx',encoding="UTF-8")
base <- xlsx::read.xlsx("C:/Users/amand/OneDrive/Documentos/GitHub/laboratorio1/Respostas.xlsx",  encoding="UTF-8")
pacman::p_load(gridExtra,readxl,dplyr,knitr,rmarkdown,ggplot2, kableExtra, stringi,xlsx)
base <- xlsx::read.xlsx("C:/Users/amand/OneDrive/Documentos/GitHub/laboratorio1/Respostas.xlsx",  encoding="UTF-8")
base <- read.xlsx("C:/Users/amand/OneDrive/Documentos/GitHub/laboratorio1/Respostas.xlsx",  encoding="UTF-8")
pacman::p_load(gridExtra,dplyr,knitr,rmarkdown,ggplot2, kableExtra, stringi,xlsx)
pacman::p_load(gridExtra,dplyr,knitr,rmarkdown,ggplot2, kableExtra, stringi,xlsx)
base <- read.xlsx("C:/Users/amand/OneDrive/Documentos/GitHub/laboratorio1/Respostas.xlsx",  encoding="UTF-8")
base <- read_xlsx("C:/Users/amand/OneDrive/Documentos/GitHub/laboratorio1/Respostas.xlsx",  encoding="UTF-8")
base <- read_excel('C:/Users/amand/OneDrive/Documentos/GitHub/laboratorio1/Respostas.xlsx',encoding="UTF-8")
pacman::p_load(gridExtra,dplyr,knitr,rmarkdown,ggplot2, kableExtra, stringi,xlsx,readr)
unname(unlist(unique(base1$como_considera_acessibilidade_arquitetonica_ufsm)))
unname(unlist(unique(base1$como_considera_acessibilidade_arquitetonica_ufsm)))[1]
unname(unlist(unique(base_feminino$como_considera_acessibilidade_arquitetonica_ufsm)))[1]
unname(unlist(unique(base_feminino$como_considera_acessibilidade_arquitetonica_ufsm)))
unname(unlist(unique(base_feminino$como_considera_acessibilidade_comunicacional_ufsm)))
unname(unlist(unique(base_feminino$como_considera_acessibilidade_atitudinal_ufsm)))
# campus x grau de satisfacao
# acessibilidade arquitetonica
table(base1$campus)
table(base1$campus,base1$como_considera_acessibilidade_arquitetonica_ufsm)
base_cachoeira <- base1[base1$genero == "Cachoeira do Sul", ]
base_frederico <- base1[base1$genero == "Frederico Westphalen", ]
base_palmeiras <- base1[base1$genero == "Palmeira das Missões", ]
base_santa <- base1[base1$genero == "Santa Maria", ]
# campus x grau de satisfacao
# acessibilidade arquitetonica
table(base1$campus)
table(base1$campus,base1$como_considera_acessibilidade_arquitetonica_ufsm)
base_cachoeira <- base1[base1$genero == "Cachoeira do Sul", ]
base_frederico <- base1[base1$genero == "Frederico Westphalen", ]
base_palmeiras <- base1[base1$genero == "Palmeira das Missões", ]
base_santa <- base1[base1$genero == "Santa Maria", ]
# campus x grau de satisfacao
# acessibilidade arquitetonica
table(base1$campus)
table(base1$campus,base1$como_considera_acessibilidade_arquitetonica_ufsm)
base_cachoeira <- base1[base1$genero == "Cachoeira do Sul", ]
base_frederico <- base1[base1$genero == "Frederico Westphalen", ]
base_palmeiras <- base1[base1$genero == "Palmeira das Missões", ]
base_santa <- base1[base1$genero == "Santa Maria", ]
print(sprintf('Percentual de respostas bom ou ótimo para os Cachoeira é de %.1f %%, para Frederico é de %.1f %%, para Palmeiras é de %.1f e Santa Maria é de %.1f',
sum(base_cachoeira$como_considera_acessibilidade_arquitetonica_ufsm %in% c("Bom", "Ótimo")) / nrow(base_cachoeira) * 100,
sum(base_frederico$como_considera_acessibilidade_arquitetonica_ufsm %in% c("Bom", "Ótimo")) / nrow(base_frederico) * 100,
sum(base_palmeiras$como_considera_acessibilidade_arquitetonica_ufsm %in% c("Bom", "Ótimo")) / nrow(base_palmeiras) * 100,
sum(base_santa$como_considera_acessibilidade_arquitetonica_ufsm %in% c("Bom", "Ótimo")) / nrow(base_santa) * 100, ))
print(sprintf('Percentual de respostas bom ou ótimo para os Cachoeira é de %.1f %%, para Frederico é de %.1f %%, para Palmeiras é de %.1f e Santa Maria é de %.1f',
sum(base_cachoeira$como_considera_acessibilidade_arquitetonica_ufsm %in% c("Bom", "Ótimo")) / nrow(base_cachoeira) * 100,
sum(base_frederico$como_considera_acessibilidade_arquitetonica_ufsm %in% c("Bom", "Ótimo")) / nrow(base_frederico) * 100,
sum(base_palmeiras$como_considera_acessibilidade_arquitetonica_ufsm %in% c("Bom", "Ótimo")) / nrow(base_palmeiras) * 100,
sum(base_santa$como_considera_acessibilidade_arquitetonica_ufsm %in% c("Bom", "Ótimo")) / nrow(base_santa) * 100 ))
base_cachoeira <- base1[base1$campus == "Cachoeira do Sul", ]
base_frederico <- base1[base1$campus == "Frederico Westphalen", ]
base_palmeiras <- base1[base1$campus == "Palmeira das Missões", ]
base_santa <- base1[base1$campus == "Santa Maria", ]
unname(unlist(unique(base1$campus)))
base_santa <- base1[base1$campus == unname(unlist(unique(base1$campus)))[1], ]
base_cachoeira <- base1[base1$campus == unname(unlist(unique(base1$campus)))[2], ]
base_frederico <- base1[base1$campus == unname(unlist(unique(base1$campus)))[4], ]
base_palmeiras <- base1[base1$campus == unname(unlist(unique(base1$campus)))[3], ]
base_santa <- base1[base1$campus == unname(unlist(unique(base1$campus)))[1], ]
print(sprintf('Percentual de respostas bom ou ótimo para os Cachoeira é de %.1f %%, para Frederico é de %.1f %%, para Palmeiras é de %.1f e Santa Maria é de %.1f',
sum(base_cachoeira$como_considera_acessibilidade_arquitetonica_ufsm %in% c("Bom", "Ótimo")) / nrow(base_cachoeira) * 100,
sum(base_frederico$como_considera_acessibilidade_arquitetonica_ufsm %in% c("Bom", "Ótimo")) / nrow(base_frederico) * 100,
sum(base_palmeiras$como_considera_acessibilidade_arquitetonica_ufsm %in% c("Bom", "Ótimo")) / nrow(base_palmeiras) * 100,
sum(base_santa$como_considera_acessibilidade_arquitetonica_ufsm %in% c("Bom", "Ótimo")) / nrow(base_santa) * 100 ))
table(base1$campus,base1$como_considera_acessibilidade_arquitetonica_ufsm)
print(sprintf('Percentual de respostas bom ou ótimo para os Cachoeira é de %.1f %%, para Frederico é de %.1f %%, para Palmeiras é de %.1f e Santa Maria é de %.1f',
sum(base_cachoeira$como_considera_acessibilidade_arquitetonica_ufsm %in% c("Bom", "Ótimo")) / nrow(base_cachoeira) * 100,
sum(base_frederico$como_considera_acessibilidade_arquitetonica_ufsm %in% c("Bom", "Ótimo")) / nrow(base_frederico) * 100,
sum(base_palmeiras$como_considera_acessibilidade_arquitetonica_ufsm %in% c("Bom", "Ótimo")) / nrow(base_palmeiras) * 100,
sum(base_santa$como_considera_acessibilidade_arquitetonica_ufsm %in% c("Bom", "Ótimo")) / nrow(base_santa) * 100 ))
texto_size <- 2.5 #  tamanho do texto para as frequências
titulo_size <- 10 # tamanho do título dos gráficos
par(mfrow = c(2, 2))
ggplot(base_santa, aes(x = factor(como_considera_acessibilidade_arquitetonica_ufsm,levels=ordem))) +
geom_bar(position = "dodge") +
labs(x = "Acessibilidade Arquitetônica na UFSM", y = "Frequência absoluta", fill = "Gênero") +
ggtitle("Avaliação da Acessibilidade Arquitetônica por Gênero") +
scale_fill_manual(values = c("Feminino" = "#445a14", "Masculino" = "#778c43")) +
theme_minimal() +
theme(plot.title = element_text(size = titulo_size))
pacman::p_load(gridExtra,dplyr,knitr,rmarkdown,ggplot2, kableExtra, stringi,xlsx,readr)
base <- read_xlsx("C:/Users/amand/OneDrive/Documentos/GitHub/laboratorio1/Respostas.xlsx",  "UTF-8")
pacman::p_load(gridExtra,dplyr,knitr,rmarkdown,ggplot2, kableExtra, stringi,xlsx,readr)
base <- read_xlsx("C:/Users/amand/OneDrive/Documentos/GitHub/laboratorio1/Respostas.xlsx")
base <- base[, -ncol(base)]
name_columns <- c(
"genero",
"genero_outro",
"idade",
"estado_civil",
"outro_estado_civil",
"filhos",
"qtd_filhos",
"idade_filhos",
"mora_com",
"outro_mora_com",
"escolaridade",
"curso_formacao",
"categoria",
"cargo",
"cargo_nivel1",
"cargo_nivel2",
"carga_horaria_semanal",
"outro_carga_horaria_semanal",
"unidade_lotacao",
"cd_ou_fg",
"campus",
"ano_ingresso",
"ingresso_cotas_pcd",
"sentimento_local_trabalho",
"deficiencia",
"deficiencia_outro",
"periodo_diagnostico",
"causa_deficiencia",
"uso_tecnologia_assistiva_recurso",
"qual_tecnologia",
"tecnologia_disponibilizada_ufsm",
"como_consegue_obter_tecnologia",
"necessita_acompanhamento/apoio_atividades_cotidianas_notrabalho",
"se_sim_quais_atividades?",
"acompanhamento/apoio_disponibilizado_ufsm",
"se_nao_como_consegue_obter",
"como_considera_acessibilidade_arquitetonica_ufsm",
"como_considera_acessibilidade_atitudinal_ufsm",
"como_considera_acessibilidade_instrumental_digital_ufsm",
"como_considera_acessibilidade_comunicacional_ufsm",
"conhece_legislacao_br_sobre_acessibilidade",
"objetivo_quando_fez_concurso_ufsm",
"outro_objetivo_quando_fez_concurso_ufsm",
"dificuldade_adaptacao_durante_ingresso_atividades_laborais_ufsm",
"dificuldade_adaptacao_se_sim_como_foi_resolvido",
"enfrentou_problema_relacionamento_chefia_eou_colegas",
"problema_relacionamento_se_sim_como_foi_resolvido",
"ja_foi_parte_reclamante_processo_administrativo_disciplinar_sindicancia_eou_reclamatoria_trabalhista_naufsm",
"considera_ufsm_dispoe_recursos_humanos_materiais_suficientes_atender_necessidades_que_eventualmente_surjam_em_relacao_acessibilidade",
"se_nao_relate_oq_considera_insuficiente",
"voce_participa_associacao/sindicato/outros_grupos_luta_direitos_trabalhistas",
"se_sim_qual_associacao/sindicato",
"se_participa_sente_pautas_pcd_consideradas_em_acoes_da_associacao/sindicato",
"espaco_comentarios")
# curso formacao tirei pq há 62 categorias distintas
# cargo tirei pq não tem padrão na escrita (42 categorias distintas)
# unidade_lotacao variável inútil para gente e 56 categorias distintas
# ia tratar a variável mora_com e outro_mora_com mas são categorias demais e estão confusas
# gênero_outro só tem nulo
# Remoção colunas
colnames(base) <- name_columns
base1 <- base[, !colnames(base) %in% c("idade_filhos", "cargo_nivel1", "cargo_nivel2",
"se_nao_como_consegue_obter","curso_formacao","cargo",
"unidade_lotacao","mora_com","outro_mora_com","genero_outro")]
pacman::p_load(gridExtra,dplyr,knitr,rmarkdown,ggplot2, kableExtra, stringi,xlsx,readxl)
base <- read_xlsx("C:/Users/amand/OneDrive/Documentos/GitHub/laboratorio1/Respostas.xlsx")
base <- base[, -ncol(base)]
name_columns <- c(
"genero",
"genero_outro",
"idade",
"estado_civil",
"outro_estado_civil",
"filhos",
"qtd_filhos",
"idade_filhos",
"mora_com",
"outro_mora_com",
"escolaridade",
"curso_formacao",
"categoria",
"cargo",
"cargo_nivel1",
"cargo_nivel2",
"carga_horaria_semanal",
"outro_carga_horaria_semanal",
"unidade_lotacao",
"cd_ou_fg",
"campus",
"ano_ingresso",
"ingresso_cotas_pcd",
"sentimento_local_trabalho",
"deficiencia",
"deficiencia_outro",
"periodo_diagnostico",
"causa_deficiencia",
"uso_tecnologia_assistiva_recurso",
"qual_tecnologia",
"tecnologia_disponibilizada_ufsm",
"como_consegue_obter_tecnologia",
"necessita_acompanhamento/apoio_atividades_cotidianas_notrabalho",
"se_sim_quais_atividades?",
"acompanhamento/apoio_disponibilizado_ufsm",
"se_nao_como_consegue_obter",
"como_considera_acessibilidade_arquitetonica_ufsm",
"como_considera_acessibilidade_atitudinal_ufsm",
"como_considera_acessibilidade_instrumental_digital_ufsm",
"como_considera_acessibilidade_comunicacional_ufsm",
"conhece_legislacao_br_sobre_acessibilidade",
"objetivo_quando_fez_concurso_ufsm",
"outro_objetivo_quando_fez_concurso_ufsm",
"dificuldade_adaptacao_durante_ingresso_atividades_laborais_ufsm",
"dificuldade_adaptacao_se_sim_como_foi_resolvido",
"enfrentou_problema_relacionamento_chefia_eou_colegas",
"problema_relacionamento_se_sim_como_foi_resolvido",
"ja_foi_parte_reclamante_processo_administrativo_disciplinar_sindicancia_eou_reclamatoria_trabalhista_naufsm",
"considera_ufsm_dispoe_recursos_humanos_materiais_suficientes_atender_necessidades_que_eventualmente_surjam_em_relacao_acessibilidade",
"se_nao_relate_oq_considera_insuficiente",
"voce_participa_associacao/sindicato/outros_grupos_luta_direitos_trabalhistas",
"se_sim_qual_associacao/sindicato",
"se_participa_sente_pautas_pcd_consideradas_em_acoes_da_associacao/sindicato",
"espaco_comentarios")
# curso formacao tirei pq há 62 categorias distintas
# cargo tirei pq não tem padrão na escrita (42 categorias distintas)
# unidade_lotacao variável inútil para gente e 56 categorias distintas
# ia tratar a variável mora_com e outro_mora_com mas são categorias demais e estão confusas
# gênero_outro só tem nulo
# Remoção colunas
colnames(base) <- name_columns
base1 <- base[, !colnames(base) %in% c("idade_filhos", "cargo_nivel1", "cargo_nivel2",
"se_nao_como_consegue_obter","curso_formacao","cargo",
"unidade_lotacao","mora_com","outro_mora_com","genero_outro")]
